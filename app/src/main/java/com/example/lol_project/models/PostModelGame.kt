package com.example.lol_project.models

import java.io.Serializable

data class PostModelGame(
    val metadata: Metadata,
    val info : Infoclass
) : Serializable

data class Metadata (
    val dataVersion : String,
    val matchId : String,
    val par: List<String>
) : Serializable

data class Infoclass (
    val gameCreation : Long,
    val gameDuration : Long,
    val gameEndTimestamp : Long,
    val gameId : Long,
    val gameMode : String,
    val gameName : String,
    val gameStartTimestamp : Long,
    val gameType : String,
    val gameVersion : String,
    val mapId : Double,
    val participants : List<Participantsclass>,
    val platformId: String,
    val queueId: Double,
    val teams: List<Team>,
    val tournamentCode: String
) : Serializable

data class Team(
    val bans: List<TeamBans>,
    val objectives: TeamObjectives,
    val teamId: Int,
    val win: Boolean
) : Serializable

data class TeamBans(
    val championId: Int,
    val pickTurn: Int
) : Serializable

data class TeamObjectives(
    val baron: Objective,
    val champion: Objective,
    val dragon: Objective,
    val horde: Objective,
    val inhibitor: Objective,
    val riftHerald: Objective,
    val tower: Objective
) : Serializable

data class Objective(
    val first: Boolean,
    val kills: Int
) : Serializable

data class Participantsclass (
    val allInPings: Double,
    val assistMePings: Double,
    val assists: Int,
    val baitPings: Double,
    val baronKills: Double,
    val basicPings: Double,
    val bountyLevel: Double,
    val challenges : Challenges,
    val champExperience : Double,
    val champLevel : Int,
    val championId : Int, // AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    val championName : String, // AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    val championTransform : Double,
    val commandPings : Double,
    val consumablesPurchased : Double,
    val damageDealtToBuildings : Double,
    val damageDealtToObjectives : Double,
    val damageDealtToTurrets : Double,
    val damageSelfMitigated : Double,
    val dangerPings : Double,
    val deaths : Int, // AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    val detectorWardsPlaced : Double,
    val doubleKills : Double,
    val dragonKills : Double,
    val eligibleForProgression : Boolean,
    val enemyMissingPings : Double,
    val enemyVisionPings : Double,
    val firstBloodAssist : Boolean,
    val firstBloodKill : Boolean,
    val firstTowerAssist : Boolean,
    val firstTowerKill : Boolean,
    val gameEndedInEarlySurrender : Boolean,
    val gameEndedInSurrender : Boolean,
    val getBackPings : Double,
    val goldEarned : Double,
    val goldSpent : Double,
    val holdPings : Double,
    val individualPosition : String,
    val inhibitorKills : Double,
    val inhibitorTakedowns : Double,
    val inhibitorsLost : Double,
    val item0 : Double,
    val item1 : Double,
    val item2 : Double,
    val item3 : Double,
    val item4 : Double,
    val item5 : Double,
    val item6 : Double,
    val itemsPurchased : Double,
    val killingSprees : Double,
    val kills : Int, // AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    val lane : String, // AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    val largestCriticalStrike : Double,
    val largestKillingSpree : Double,
    val largestMultiKill : Double,
    val longestTimeSpentLiving : Double,
    val magicDamageDealt : Double,
    val magicDamageDealtToChampions : Double,
    val magicDamageTaken : Double,
    val needVisionPings : Double,
    val neutralMinionsKilled : Double,
    val nexusKills : Double,
    val nexusLost : Double,
    val nexusTakedowns : Double,
    val objectivesStolen : Double,
    val objectivesStolenAssists : Double,
    val onMyWayPings : Double,
    val participantId : Double,
    val pentaKills : Double,
    val perks : PerksClass,
    val physicalDamageDealt: Double,
    val physicalDamageDealtToChampions: Double,
    val physicalDamageTaken: Double,
    val placement: Double,
    val playerAugment1: Double,
    val playerAugment2: Double,
    val playerAugment3: Double,
    val playerAugment4: Double,
    val playerSubteamId: Double,
    val profileIcon: Int,
    val pushPings: Double,
    val puuid: String,
    val quadraKills: Int,
    val riotIdName: String,
    val riotIdTagline: String,
    val role: String,
    val sightWardsBoughtInGame: Double,
    val spell1Casts: Double,
    val spell2Casts: Double,
    val spell3Casts: Double,
    val spell4Casts: Double,
    val subteamPlacement: Double,
    val summoner1Casts: Double,
    val summoner1Id: Int,
    val summoner2Casts: Int,
    val summoner2Id: Int,
    val summonerId: String,
    val summonerLevel: Int,
    val summonerName: String,
    val teamEarlySurrendered: Boolean,
    val teamId: Int,
    val teamPosition: String,
    val timeCCingOthers: Double,
    val timePlayed: Double,
    val totalAllyJungleMinionsKilled: Double,
    val totalDamageDealt: Double,
    val totalDamageDealtToChampions: Double,
    val totalDamageShieldedOnTeammates: Double,
    val totalDamageTaken: Double,
    val totalEnemyJungleMinionsKilled: Double,
    val totalHeal: Double,
    val totalHealsOnTeammates: Double,
    val totalMinionsKilled: Double,
    val totalTimeCCDealt: Double,
    val totalTimeSpentDead: Double,
    val totalUnitsHealed: Double,
    val tripleKills: Double,
    val trueDamageDealt: Double,
    val trueDamageDealtToChampions: Double,
    val trueDamageTaken: Double,
    val turretKills: Double,
    val turretTakedowns: Double,
    val turretsLost: Double,
    val unrealKills: Double,
    val visionClearedPings: Double,
    val visionScore: Double,
    val visionWardsBoughtInGame: Double,
    val wardsKilled: Double,
    val wardsPlaced: Double,
    val win: Boolean
) : Serializable

data class Challenges (
    val AssistStreakCount12 : Double,
    val abilityUses : Double,
    val acesBefore15Minutes : Double,
    val alliedJungleMonsterKills : Double,
    val baronBuffGoldAdvantageOverThreshold : Double,
    val baronTakedowns : Double,
    val blastConeOppositeOpponentCount : Double,
    val bountyGold: Double,
    val buffsStolen : Double,
    val completeSupportQuestInTime : Double,
    val controlWardTimeCoverageInRiverOrEnemyHalf : Double,
    val controlWardsPlaced : Double,
    val damagePerMinute : Double,
    val damageTakenOnTeamPercentage : Double,
    val dancedWithRiftHerald : Double,
    val deathsByEnemyChamps : Int, //ON PREND
    val dodgeSkillShotsSmallWindow : Double,
    val doubleAces : Double,
    val dragonTakedowns : Double,
    val earliestBaron : Double,
    val earlyLaningPhaseGoldExpAdvantage : Double,
    val effectiveHealAndShielding : Double,
    val elderDragonKillsWithOpposingSoul : Double,
    val elderDragonMultikills : Double,
    val enemyChampionImmobilizations : Double,
    val enemyJungleMonsterKills : Double,
    val epicMonsterKillsNearEnemyJungler : Double,
    val epicMonsterKillsWithin30SecondsOfSpawn : Double,
    val epicMonsterSteals : Double,
    val epicMonsterStolenWithoutSmite : Double,
    val firstTurretKilled : Double,
    val flawlessAces : Double,
    val fullTeamTakedown : Double,
    val gameLength : Double,
    val getTakedownsInAllLanesEarlyJungleAsLaner: Double,
    val goldPerMinute: Double,
    val hadOpenNexus: Double,
    val highestChampionDamage: Double,
    val highestWardKills: Double,
    val immobilizeAndKillWithAlly: Double,
    val initialBuffCount: Double,
    val initialCrabCount: Double,
    val jungleCsBefore10Minutes: Double,
    val junglerTakedownsNearDamagedEpicMonster: Double,
    val kTurretsDestroyedBeforePlatesFall: Double,
    val kda: Double,
    val killAfterHiddenWithAlly: Double,
    val killParticipation: Double,
    val killedChampTookFullTeamDamageSurvived: Double,
    val killingSprees : Double,
    val killsNearEnemyTurret : Double,
    val killsOnOtherLanesEarlyJungleAsLaner : Double,
    val killsOnRecentlyHealedByAramPack : Double,
    val killsUnderOwnTurret : Double,
    val killsWithHelpFromEpicMonster : Double,
    val knockEnemyIntoTeamAndKill : Double,
    val landSkillShotsEarlyGame : Double,
    val laneMinionsFirst10Minutes : Double,
    val laningPhaseGoldExpAdvantage : Double,
    val legendaryCount : Double,
    val lostAnInhibitor : Double,
    val maxCsAdvantageOnLaneOpponent : Double,
    val maxKillDeficit : Double,
    val maxLevelLeadLaneOpponent : Double,
    val mejaisFullStackInTime : Double,
    val moreEnemyJungleThanOpponent : Double,
    val multiKillOneSpell : Double,
    val multiTurretRiftHeraldCount : Double,
    val multikills : Double,
    val multikillsAfterAggressiveFlash : Double,
    val mythicItemUsed : Long,
    val outerTurretExecutesBefore10Minutes : Double,
    val outnumberedKills : Double,
    val outnumberedNexusKill : Double,
    val perfectDragonSoulsTaken : Double,
    val perfectGame : Double,
    val pickKillWithAlly : Double,
    val playedChampSelectPosition : Double,
    val poroExplosions : Double,
    val quickCleanse : Double,
    val quickFirstTurret : Double,
    val quickSoloKills : Double,
    val riftHeraldTakedowns : Double,
    val saveAllyFromDeath : Double,
    val scuttleCrabKills : Double,
    val shortestTimeToAceFromFirstTakedown : Double,
    val skillshotsDodged : Double,
    val skillshotsHit : Double,
    val snowballsHit : Double,
    val soloBaronKills : Double,
    val soloKills : Double,
    val stealthWardsPlaced : Double,
    val survivedSingleDigitHpCount : Double,
    val survivedThreeImmobilizesInFight : Double,
    val takedownOnFirstTurret : Double,
    val takedowns : Double,
    val takedownsAfterGainingLevelAdvantage : Double,
    val takedownsBeforeJungleMinionSpawn : Double,
    val takedownsFirstXMinutes : Double,
    val takedownsInAlcove : Double,
    val takedownsInEnemyFountain : Double,
    val teamBaronKills : Double,
    val teamDamagePercentage : Double,
    val teamElderDragonKills : Double,
    val teamRiftHeraldKills : Double,
    val thirdInhibitorDestroyedTime : Double,
    val tookLargeDamageSurvived : Double,
    val turretPlatesTaken : Double,
    val turretTakedowns : Double,
    val turretsTakenWithRiftHerald : Double,
    val twentyMinionsIn3SecondsCount : Double,
    val twoWardsOneSweeperCount : Double,
    val unseenRecalls : Double,
    val visionScoreAdvantageLaneOpponent : Double,
    val visionScorePerMinute : Double,
    val wardTakedowns : Double,
    val wardTakedownsBefore20M : Double,
    val wardsGuarded : Double
) : Serializable

data class PerksClass (
    val statPerks : StatPerksClass,
    val styles : List<StylesClass>
) : Serializable

data class StatPerksClass (
    val defense : Double,
    val flex : Double,
    val offense : Double
) : Serializable

data class StylesClass (
    val description : String,
    val selections : List<SelectionsClass>,
    val style : Int
) : Serializable

data class SelectionsClass (
    val perk : Int,
    val var1 : Int,
    val var2 : Int,
    val var3 : Int
) : Serializable